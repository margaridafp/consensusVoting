{"version":3,"sources":["components/Text.js","components/votingOptions.js","App.js","index.js"],"names":["Text","props","content","symbol","votingOptions","useStyles","makeStyles","theme","container","display","flexDirection","justifyContent","alignItems","padding","spacing","card","border","height","width","titleText","fontWeight","fontFamily","explainedText","color","textAlign","result","align","resultText","fontSize","Lista","classes","Grid","className","map","votingOption","item","sm","Card","variant","style","background","CardActionArea","onClick","onDecision","CardContent","Typography","gutterBottom","component","name","explained","App","useState","setName","setSymbol","setColor","decision","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAMeA,MAJf,SAAcC,GACZ,OAAO,gCAAMA,EAAMC,QAAZ,IAAsBD,EAAME,WCyBtBC,EA3BO,CACpB,CACE,KAAQ,QACR,UAAa,iDACb,MAAS,UACT,OAAU,KAEZ,CACE,KAAQ,eACR,UAAa,6FACb,MAAS,UACT,OAAU,UAEZ,CACE,KAAQ,aACR,UAAa,yGACb,MAAS,UACT,OAAU,UAEZ,CACE,KAAQ,uBACR,UAAa,4GACb,MAAS,UACT,OAAU,WCbRC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UACZC,QAASN,EAAMO,QAAQ,IAEzBC,KAAM,CACJC,OAAQ,OACRC,OAAQ,MACRC,MAAO,OAETC,UAAW,CACTC,WAAY,OACZC,WAAY,SAEdC,cAAe,CACbD,WAAY,QACZE,MAAO,gBACPC,UAAW,WAEbC,OAAQ,CACNR,OAAQ,OACRS,MAAO,SACPR,MAAO,QAETS,WAAY,CACVP,WAAY,OACZC,WAAY,QACZO,SAAU,aAId,SAASC,EAAM5B,GACb,IAAM6B,EAAUzB,IAChB,OACE,cAAC0B,EAAA,EAAD,CAAMvB,WAAS,EAACwB,UAAWF,EAAQtB,UAAnC,SACGJ,EAAc6B,KAAI,SAACC,GAAD,OACjB,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAyBC,GAAI,EAAvC,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRN,UAAWF,EAAQf,KACnBwB,MAAO,CAACC,WAAYN,EAAaX,OAHnC,SAIE,cAACkB,EAAA,EAAD,CAAgBC,QAAS,kBAAMzC,EAAM0C,WAAWT,IAAhD,SACE,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EACtBpB,MAAM,SACNqB,UAAU,KACVT,QAAQ,KACRN,UAAWF,EAAQX,UAJrB,SAOE,cAAC,EAAD,CACEjB,QAASgC,EAAac,KACtB7C,OAAQ+B,EAAa/B,WAKzB,cAAC0C,EAAA,EAAD,CACEtB,MAAM,gBACNwB,UAAU,IACVf,UAAWF,EAAQR,cAHrB,SAIGY,EAAae,oBAzBRf,EAAac,WA0EtBE,MAtCf,WACE,IAAMpB,EAAUzB,IADH,EAEW8C,mBAAS,MAFpB,mBAENH,EAFM,KAEAI,EAFA,OAGeD,mBAAS,MAHxB,mBAGNhD,EAHM,KAGEkD,EAHF,OAIaF,mBAAS,MAJtB,mBAIN5B,EAJM,KAIC+B,EAJD,KAMb,OAAW,OAAPN,EAEA,cAACnB,EAAD,CACEc,WAAY,SAACY,GAAD,MAAc,CACxBF,EAAUE,EAASpD,QACnBiD,EAAQG,EAASP,MACjBM,EAASC,EAAShC,WAKtB,qCACE,mBAAGG,MAAM,QAAT,SACE,cAAC8B,EAAA,EAAD,CAAQlB,QAAQ,YAAYI,QAAS,kBAAIU,EAAQ,OAAjD,oBAEF,cAACf,EAAA,EAAD,CACEC,QAAQ,WACRN,UAAWF,EAAQL,OACnBc,MAAO,CAACC,WAAYjB,GAHtB,SAIE,cAACsB,EAAA,EAAD,CAAYC,cAAY,EACtBC,UAAU,KACVT,QAAQ,KACRZ,MAAM,SACNM,UAAWF,EAAQH,WAJrB,SAKE,cAAC,EAAD,CAAMzB,QAASC,YC7G3BsD,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f2d683e2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Text(props) {\n  return <div>{props.content} {props.symbol}</div>;\n}\n\nexport default Text;\n","/* eslint-disable max-len */\nconst votingOptions = [\n  {\n    'name': 'Agree',\n    'explained': 'I agree to the proposal as it currently stands',\n    'color': '#2ECC40',\n    'symbol': '\\u004F',\n  },\n  {\n    'name': 'Reservations',\n    'explained': 'I do not oppose the proposal but I wish to register reservations in the result of the call',\n    'color': '#FFDC00',\n    'symbol': '\\u0528',\n  },\n  {\n    'name': 'Standaside',\n    'explained': 'I do not oppose the porposal but I do not support it either: I won\\'t spend energy into implementing it',\n    'color': '#FF851B',\n    'symbol': '\\u2055',\n  },\n  {\n    'name': 'Principled objection',\n    'explained': 'I oppose the proposal but I commit to work with the proposing party to find a solution that works for all',\n    'color': '#FF4136',\n    'symbol': '\\u22B2',\n  },\n];\n\nexport default votingOptions;\n","import {Grid, Typography} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport {makeStyles} from '@material-ui/core/styles';\nimport React, {useState} from 'react';\n\nimport Text from './components/Text';\nimport votingOptions from './components/votingOptions';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: theme.spacing(2),\n  },\n  card: {\n    border: 'none',\n    height: '99%',\n    width: '99%',\n  },\n  titleText: {\n    fontWeight: 'bold',\n    fontFamily: 'Arial',\n  },\n  explainedText: {\n    fontFamily: 'Arial',\n    color: 'textSecondary',\n    textAlign: 'justify',\n  },\n  result: {\n    height: '30vw',\n    align: 'center',\n    width: '100%',\n  },\n  resultText: {\n    fontWeight: 'bold',\n    fontFamily: 'Arial',\n    fontSize: '25vw ',\n  },\n}));\n\nfunction Lista(props) {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.container}>\n      {votingOptions.map((votingOption) => (\n        <Grid item key={votingOption.name} sm={6} >\n          <Card\n            variant=\"outlined\"\n            className={classes.card}\n            style={{background: votingOption.color}}>\n            <CardActionArea onClick={() => props.onDecision(votingOption)}>\n              <CardContent>\n                <Typography gutterBottom\n                  align=\"center\"\n                  component=\"h5\"\n                  variant=\"h5\"\n                  className={classes.titleText} >\n                  {/* {votingOption.name} */}\n\n                  <Text\n                    content={votingOption.name}\n                    symbol={votingOption.symbol}>\n\n                  </Text>\n\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  component=\"p\"\n                  className={classes.explainedText}>\n                  {votingOption.explained}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [name, setName] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n  const [color, setColor] = useState(null);\n\n  if (name===null) {\n    return (\n      <Lista\n        onDecision={(decision) => [\n          setSymbol(decision.symbol),\n          setName(decision.name),\n          setColor(decision.color)]\n        } />\n    );\n  } else {\n    return (\n      <>\n        <p align=\"right\">\n          <Button variant=\"contained\" onClick={()=>setName(null)}>Back</Button>\n        </p>\n        <Card\n          variant=\"outlined\"\n          className={classes.result}\n          style={{background: color}}>\n          <Typography gutterBottom\n            component=\"h1\"\n            variant=\"h1\"\n            align='center'\n            className={classes.resultText}>\n            <Text content={symbol} />\n          </Typography>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}