{"version":3,"sources":["components/votingOptions.js","components/Text.js","App.js","index.js"],"names":["votingOptions","Text","props","content","symbol","useStyles","makeStyles","theme","container","display","flexDirection","justifyContent","alignItems","padding","spacing","card","border","height","width","titleText","fontWeight","fontFamily","explainedText","color","textAlign","result","align","resultText","fontSize","Lista","classes","Grid","className","map","votingOption","item","sm","Card","variant","style","background","CardActionArea","onClick","onDecision","CardContent","Typography","gutterBottom","component","name","explained","App","useState","setName","setSymbol","setColor","decision","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA2BeA,EA3BO,CAClB,CACE,KAAQ,QACR,UAAa,iDACb,MAAQ,UACR,OAAS,KAEX,CACE,KAAQ,eACR,UAAa,6FACb,MAAQ,UACR,OAAS,UAEX,CACE,KAAQ,aACR,UAAa,yGACb,MAAQ,UACR,OAAS,UAEX,CACE,KAAQ,uBACR,UAAa,4GACb,MAAQ,UACR,OAAS,WCjBAC,MAJf,SAAcC,GACV,OAAO,gCAAMA,EAAMC,QAAZ,IAAsBD,EAAME,WCUjCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,QAAQ,OACRC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UACZC,QAASN,EAAMO,QAAQ,IAEzBC,KAAM,CACJC,OAAQ,OACRC,OAAQ,MACRC,MAAO,OAETC,UAAW,CACTC,WAAY,OACZC,WAAY,SAEdC,cAAe,CACbD,WAAY,QACZE,MAAO,gBACPC,UAAW,WAEbC,OAAO,CACLR,OAAQ,OACRS,MAAO,SACPR,MAAO,QAETS,WAAW,CACTP,WAAY,OACZC,WAAY,QACZO,SAAS,aAKb,SAASC,EAAM3B,GACb,IAAM4B,EAAUzB,IAChB,OACE,cAAC0B,EAAA,EAAD,CAAMvB,WAAS,EAACwB,UAAWF,EAAQtB,UAAnC,SACGR,EAAciC,KAAI,SAAAC,GAAY,OAC7B,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAyBC,GAAI,EAAvC,SACE,cAACC,EAAA,EAAD,CAAMC,QAAQ,WAAWN,UAAWF,EAAQf,KAAMwB,MAAO,CAAEC,WAAYN,EAAaX,OAApF,SACE,cAACkB,EAAA,EAAD,CAAgBC,QAAS,kBAAMxC,EAAMyC,WAAWT,IAAhD,SACE,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACpB,MAAM,SAASqB,UAAU,KAAKT,QAAQ,KAAKN,UAAWF,EAAQX,UAAvF,SAGE,cAAC,EAAD,CAAMhB,QAAS+B,EAAac,KAAM5C,OAAQ8B,EAAa9B,WAGzD,cAACyC,EAAA,EAAD,CAAYtB,MAAM,gBAAgBwB,UAAU,IAAIf,UAAWF,EAAQR,cAAnE,SAAmFY,EAAae,oBAVxFf,EAAac,WA8CtBE,MA1Bf,WACE,IAAMpB,EAAUzB,IADH,EAEW8C,mBAAS,MAFpB,mBAENH,EAFM,KAEAI,EAFA,OAGeD,mBAAS,MAHxB,mBAGN/C,EAHM,KAGEiD,EAHF,OAIaF,mBAAS,MAJtB,mBAIN5B,EAJM,KAIC+B,EAJD,KAMb,OAAW,OAAPN,EAEE,cAACnB,EAAD,CAAOc,WAAY,SAACY,GAAD,MAAc,CAACF,EAAUE,EAASnD,QAASgD,EAAQG,EAASP,MAAOM,EAASC,EAAShC,WAI1G,qCACA,mBAAGG,MAAM,QAAT,SACE,cAAC8B,EAAA,EAAD,CAAQlB,QAAQ,YAAYI,QAAS,kBAAIU,EAAQ,OAAjD,oBAEF,cAACf,EAAA,EAAD,CAAMC,QAAQ,WAAWN,UAAWF,EAAQL,OAAQc,MAAO,CAAEC,WAAYjB,GAAzE,SACE,cAACsB,EAAA,EAAD,CAAYC,cAAY,EAACC,UAAU,KAAKT,QAAQ,KAAKZ,MAAM,SAASM,UAAWF,EAAQH,WAAvF,SACE,cAAC,EAAD,CAAMxB,QAASC,YCtFzBqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.437b4983.chunk.js","sourcesContent":["const votingOptions = [\n    {\n      \"name\": \"Agree\",\n      \"explained\": \"I agree to the proposal as it currently stands\",\n      'color':'#2ECC40',\n      'symbol':'\\u004F'\n    },\n    {\n      \"name\": \"Reservations\",\n      \"explained\": \"I do not oppose the proposal but I wish to register reservations in the result of the call\",\n      'color':'#FFDC00',\n      'symbol':'\\u0528'\n    },\n    {\n      \"name\": \"Standaside\",\n      \"explained\": \"I do not oppose the porposal but I do not support it either: I won't spend energy into implementing it\",\n      'color':'#FF851B',\n      'symbol':'\\u2055'\n    },\n    { \n      \"name\": \"Principled objection\",\n      \"explained\": \"I oppose the proposal but I commit to work with the proposing party to find a solution that works for all\",\n      'color':'#FF4136',\n      'symbol':'\\u22B2'\n    }\n  ];\n\nexport default votingOptions;","\n\nfunction Text(props) {\n    return <div>{props.content} {props.symbol}</div>\n  }\n\nexport default Text","import React, { Component, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport votingOptions from './components/votingOptions'\nimport Text from './components/Text';\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display:\"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\",\n    padding: theme.spacing(2),\n  },\n  card: {\n    border: 'none',\n    height: '99%',\n    width: '99%',\n  },\n  titleText: {\n    fontWeight: \"bold\",\n    fontFamily: 'Arial',\n  },\n  explainedText: {\n    fontFamily: 'Arial',\n    color: \"textSecondary\",\n    textAlign: \"justify\",\n  },\n  result:{\n    height: '30vw',\n    align: 'center',\n    width: '100%'\n  },\n  resultText:{\n    fontWeight: \"bold\",\n    fontFamily: 'Arial',\n    fontSize:'25vw ',\n  }\n}));\n\n\nfunction Lista(props) {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.container}>\n      {votingOptions.map(votingOption => (\n        <Grid item key={votingOption.name} sm={6} >\n          <Card variant=\"outlined\" className={classes.card} style={{ background: votingOption.color }}>\n            <CardActionArea onClick={() => props.onDecision(votingOption)}>\n              <CardContent>\n                <Typography gutterBottom align=\"center\" component=\"h5\" variant=\"h5\" className={classes.titleText}  >\n                  {/* {votingOption.name} */}\n\n                  <Text content={votingOption.name} symbol={votingOption.symbol}></Text>\n\n                </Typography>\n                <Typography color=\"textSecondary\" component=\"p\" className={classes.explainedText}>{votingOption.explained}</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [name, setName] = useState(null);\n  const [symbol, setSymbol] = useState(null);\n  const [color, setColor] = useState(null);\n\n  if (name===null) {\n    return (\n        <Lista onDecision={(decision) => [setSymbol(decision.symbol), setName(decision.name), setColor(decision.color)]} />\n    );\n  } else { \n    return (\n      <>\n      <p align=\"right\">\n        <Button variant=\"contained\" onClick={()=>setName(null)}>Back</Button>\n      </p>\n      <Card variant=\"outlined\" className={classes.result} style={{ background: color }}>\n        <Typography gutterBottom component=\"h1\" variant=\"h1\" align='center' className={classes.resultText}>\n          <Text content={symbol} />\n        </Typography>\n      </Card>\n      </>\n      )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}